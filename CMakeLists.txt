cmake_minimum_required(VERSION 2.8)
project (ccORM)
include(${CMAKE_CURRENT_SOURCE_DIR}/cmake/CompilerOptions.cmake)
if(EXISTS "${CMAKE_BINARY_DIR}/conanbuildinfo.cmake")
include(${CMAKE_BINARY_DIR}/conanbuildinfo.cmake)
conan_basic_setup()
endif()
if (MSVC)
	add_compile_options( /Oi /Ox /GA /W3 /permissive- /utf-8 /std:c++17 )
else()
    add_definitions(-std=c++17)
endif()
set(CMAKE_VERBOSE_MAKEFILE ON)
SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${CMAKE_SOURCE_DIR}/cmake)
find_package(MYSQL REQUIRED)
find_package(PostgreSQL REQUIRED)
find_package(SQLite3 REQUIRED)
find_package(OpenSSL)
if(OPENSSL_FOUND)
	include_directories(${OPENSSL_INCLUDE_DIR})
endif()
if (NOT CMAKE_BUILD_TYPE)
	message(STATUS "No build type selected, default to Release")
	set(CMAKE_BUILD_TYPE "Release")
endif()
if (MSVC)
	SET(BOOST_ROOT "E:/Code/boost_1_75_0")
	set(Boost_USE_STATIC_LIBS "On")
	find_package( Boost 1.55 COMPONENTS system REQUIRED )
else()
	find_package( Boost 1.55 COMPONENTS system REQUIRED )
	add_definitions(-Wno-ignored-attributes) # to skip postgresql warnings.
endif()
include_directories( ${Boost_INCLUDE_DIR} ${MYSQL_INCLUDE_DIR} ${SQLite3_INCLUDE_DIRS} ${PostgreSQL_INCLUDE_DIRS})
#add_subdirectory(src)
set(LIBS ${Boost_LIBRARIES} ${MYSQL_LIBRARY} ${SQLite3_LIBRARIES} ${PostgreSQL_LIBRARIES} ${OPENSSL_LIBRARIES} wsock32)
add_executable(ccORM main.cpp)
target_link_libraries( ccORM ${LIBS})
add_custom_command(OUTPUT any.db
	COMMAND ${CMAKE_COMMAND} -E
copy ${PROJECT_SOURCE_DIR}/any.db ${CMAKE_CURRENT_BINARY_DIR}/any.db
	DEPENDS ${PROJECT_SOURCE_DIR}/any.db
)
add_custom_target(any_copy ALL DEPENDS any.db)
